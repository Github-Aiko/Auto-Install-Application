name: build test
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [linux, windows, drawin]
        goarch: [amd64, arm64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3.3.0
      - name: Show workflow information 
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
    
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Get project dependencies
        run: go mod download

      - name: Build AutoInstall
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/AutoInstall -trimpath -ldflags "-s -w -buildid=" .
     
            
      - name: Create ZIP archive
        shell: bash
        run: |
          pushd build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../AutoInstall-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./AutoInstall-$ASSET_NAME.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done
      - name: Change the name
        run: |
          mv build_assets AutoInstall-$ASSET_NAME
          
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AutoInstall-${{ steps.get_filename.outputs.ASSET_NAME }}
          path: |
            ./AutoInstall-${{ steps.get_filename.outputs.ASSET_NAME }}/*